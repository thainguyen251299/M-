<?php

namespace DoctrineProxies\__CG__\Chamilo\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Course extends \Chamilo\CoreBundle\Entity\Course implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'users', 'urls', 'sessions', 'sessionUserSubscriptions', 'tools', 'currentSession', 'issuedSkills', 'title', 'code', 'directory', 'courseLanguage', 'description', 'categoryCode', 'visibility', 'showScore', 'tutorName', 'visualCode', 'departmentName', 'departmentUrl', 'diskQuota', 'lastVisit', 'lastEdit', 'creationDate', 'expirationDate', 'subscribe', 'unsubscribe', 'registrationCode', 'legal', 'activateLegal', 'addTeachersToSessionsCourses', 'courseTypeId', 'room'];
        }

        return ['__isInitialized__', 'id', 'users', 'urls', 'sessions', 'sessionUserSubscriptions', 'tools', 'currentSession', 'issuedSkills', 'title', 'code', 'directory', 'courseLanguage', 'description', 'categoryCode', 'visibility', 'showScore', 'tutorName', 'visualCode', 'departmentName', 'departmentUrl', 'diskQuota', 'lastVisit', 'lastEdit', 'creationDate', 'expirationDate', 'subscribe', 'unsubscribe', 'registrationCode', 'legal', 'activateLegal', 'addTeachersToSessionsCourses', 'courseTypeId', 'room'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Course $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getSessions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessions', []);

        return parent::getSessions();
    }

    /**
     * {@inheritDoc}
     */
    public function getTools()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTools', []);

        return parent::getTools();
    }

    /**
     * {@inheritDoc}
     */
    public function setTools($tools)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTools', [$tools]);

        return parent::setTools($tools);
    }

    /**
     * {@inheritDoc}
     */
    public function setToolList($list)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToolList', [$list]);

        return parent::setToolList($list);
    }

    /**
     * {@inheritDoc}
     */
    public function addTools(\Chamilo\CourseBundle\Entity\CTool $tool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTools', [$tool]);

        return parent::addTools($tool);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrls()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrls', []);

        return parent::getUrls();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrls($urls)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrls', [$urls]);

        return parent::setUrls($urls);
    }

    /**
     * {@inheritDoc}
     */
    public function addUrls(\Chamilo\CoreBundle\Entity\AccessUrlRelCourse $url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUrls', [$url]);

        return parent::addUrls($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', []);

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function getTeachers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeachers', []);

        return parent::getTeachers();
    }

    /**
     * {@inheritDoc}
     */
    public function getStudents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStudents', []);

        return parent::getStudents();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsers($users)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsers', [$users]);

        return parent::setUsers($users);
    }

    /**
     * {@inheritDoc}
     */
    public function addUsers(\Chamilo\CoreBundle\Entity\CourseRelUser $courseRelUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUsers', [$courseRelUser]);

        return parent::addUsers($courseRelUser);
    }

    /**
     * {@inheritDoc}
     */
    public function hasUser(\Chamilo\UserBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasUser', [$user]);

        return parent::hasUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function hasStudent(\Chamilo\UserBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasStudent', [$user]);

        return parent::hasStudent($user);
    }

    /**
     * {@inheritDoc}
     */
    public function hasTeacher(\Chamilo\UserBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasTeacher', [$user]);

        return parent::hasTeacher($user);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUsers(\Chamilo\CoreBundle\Entity\CourseRelUser $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUsers', [$user]);

        return parent::removeUsers($user);
    }

    /**
     * {@inheritDoc}
     */
    public function addTeacher(\Chamilo\UserBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTeacher', [$user]);

        return parent::addTeacher($user);
    }

    /**
     * {@inheritDoc}
     */
    public function addStudent(\Chamilo\UserBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStudent', [$user]);

        return parent::addStudent($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setDirectory($directory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDirectory', [$directory]);

        return parent::setDirectory($directory);
    }

    /**
     * {@inheritDoc}
     */
    public function getDirectory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDirectory', []);

        return parent::getDirectory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCourseLanguage($courseLanguage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCourseLanguage', [$courseLanguage]);

        return parent::setCourseLanguage($courseLanguage);
    }

    /**
     * {@inheritDoc}
     */
    public function getCourseLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCourseLanguage', []);

        return parent::getCourseLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleAndCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleAndCode', []);

        return parent::getTitleAndCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryCode($categoryCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryCode', [$categoryCode]);

        return parent::setCategoryCode($categoryCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryCode', []);

        return parent::getCategoryCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisibility($visibility)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisibility', [$visibility]);

        return parent::setVisibility($visibility);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisibility()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisibility', []);

        return parent::getVisibility();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowScore($showScore)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowScore', [$showScore]);

        return parent::setShowScore($showScore);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowScore()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowScore', []);

        return parent::getShowScore();
    }

    /**
     * {@inheritDoc}
     */
    public function setTutorName($tutorName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTutorName', [$tutorName]);

        return parent::setTutorName($tutorName);
    }

    /**
     * {@inheritDoc}
     */
    public function getTutorName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTutorName', []);

        return parent::getTutorName();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisualCode($visualCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisualCode', [$visualCode]);

        return parent::setVisualCode($visualCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisualCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisualCode', []);

        return parent::getVisualCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartmentName($departmentName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartmentName', [$departmentName]);

        return parent::setDepartmentName($departmentName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartmentName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartmentName', []);

        return parent::getDepartmentName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartmentUrl($departmentUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartmentUrl', [$departmentUrl]);

        return parent::setDepartmentUrl($departmentUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartmentUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartmentUrl', []);

        return parent::getDepartmentUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiskQuota($diskQuota)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiskQuota', [$diskQuota]);

        return parent::setDiskQuota($diskQuota);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiskQuota()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiskQuota', []);

        return parent::getDiskQuota();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastVisit($lastVisit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastVisit', [$lastVisit]);

        return parent::setLastVisit($lastVisit);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastVisit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastVisit', []);

        return parent::getLastVisit();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastEdit($lastEdit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastEdit', [$lastEdit]);

        return parent::setLastEdit($lastEdit);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastEdit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastEdit', []);

        return parent::getLastEdit();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationDate($creationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationDate', [$creationDate]);

        return parent::setCreationDate($creationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationDate', []);

        return parent::getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpirationDate($expirationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpirationDate', [$expirationDate]);

        return parent::setExpirationDate($expirationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpirationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpirationDate', []);

        return parent::getExpirationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscribe($subscribe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscribe', [$subscribe]);

        return parent::setSubscribe($subscribe);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscribe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscribe', []);

        return parent::getSubscribe();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnsubscribe($unsubscribe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnsubscribe', [$unsubscribe]);

        return parent::setUnsubscribe($unsubscribe);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnsubscribe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnsubscribe', []);

        return parent::getUnsubscribe();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationCode($registrationCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationCode', [$registrationCode]);

        return parent::setRegistrationCode($registrationCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationCode', []);

        return parent::getRegistrationCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setLegal($legal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLegal', [$legal]);

        return parent::setLegal($legal);
    }

    /**
     * {@inheritDoc}
     */
    public function getLegal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLegal', []);

        return parent::getLegal();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivateLegal($activateLegal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivateLegal', [$activateLegal]);

        return parent::setActivateLegal($activateLegal);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivateLegal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivateLegal', []);

        return parent::getActivateLegal();
    }

    /**
     * {@inheritDoc}
     */
    public function setCourseTypeId($courseTypeId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCourseTypeId', [$courseTypeId]);

        return parent::setCourseTypeId($courseTypeId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCourseTypeId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCourseTypeId', []);

        return parent::getCourseTypeId();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoom', []);

        return parent::getRoom();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoom($room)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoom', [$room]);

        return parent::setRoom($room);
    }

    /**
     * {@inheritDoc}
     */
    public function isActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActive', []);

        return parent::isActive();
    }

    /**
     * {@inheritDoc}
     */
    public function isPublic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublic', []);

        return parent::isPublic();
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentSession()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentSession', []);

        return parent::getCurrentSession();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrentSession(\Chamilo\CoreBundle\Entity\Session $session)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrentSession', [$session]);

        return parent::setCurrentSession($session);
    }

}
